/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.budthapa.jts.view.settings;

import com.budthapa.jts.business.JobBL;
import com.budthapa.jts.model.JobBean;
import com.budthapa.jts.view.main.Dashboard;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author budthapa
 */
public class Search extends javax.swing.JInternalFrame {
    private String jobStatus;

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchJobResultTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Search :: Job list");

        searchJobResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(searchJobResultTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable searchJobResultTable;
    // End of variables declaration//GEN-END:variables

    private List<JobBean> getSearchResults(String search) {
        return new JobBL().getSearchResults(search);
    }

    public void setTextToSearch(String search) {
        if (!search.isEmpty()) {
            List<JobBean> searchList=getSearchResults(search);
            //initialise table and set editable to false
            DefaultTableModel table = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    //all cells false
                    return false;
                }
            };

            //column name is compulsary, if not added, added rows will not be displayed
            table.addColumn("Job Id");
            table.addColumn("Job Name");
            table.addColumn("Assigne Name");
            table.addColumn("Client Name");
            table.addColumn("Media House Name");
            table.addColumn("Job Completed");
            table.addColumn("Contents");
            for (JobBean list : searchList) {
                if(list.isJobCompleted()){
                    jobStatus="Completed";
                }else{
                    jobStatus="On Progress";
                }
                
                //create dynamic row
                Object[] rowData = {list.getJobId(), list.getJobName(), list.getAssigneeName(),
                    list.getClientName(), list.getMediaHouseName(), jobStatus,
                    list.getJobContents()
                };
                table.addRow(rowData);
            }
            searchJobResultTable.setModel(table);
        }
    }
}
